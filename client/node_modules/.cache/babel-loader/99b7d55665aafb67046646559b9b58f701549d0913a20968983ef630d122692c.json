{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nalaw\\\\OneDrive\\\\Desktop\\\\starter\\\\client\\\\src\\\\components\\\\Recovery.js\";\nimport React, { useEffect, useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { useAuthStore } from '../store/store';\nimport styles from '../styles/Username.module.css';\nimport { generateOTP, verifyOTP } from '../helper/helper';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Recovery() {\n  //   const { username } = useAuthStore(state => state.auth);\n  //   const [OTP, setOTP] = useState();\n  //   const navigate = useNavigate()\n\n  //   useEffect(() => {\n  //     generateOTP(username).then((OTP) => {\n  //       console.log(OTP)\n  //       if(OTP) return toast.success('OTP has been send to your email!');\n  //       return toast.error('Problem while generating OTP!')\n  //     })\n  //   }, [username]);\n\n  //   async function onSubmit(e){\n  //     e.preventDefault();\n  //     try {\n  //       let { status } = await verifyOTP({ username, code : OTP })\n  //       if(status === 201){\n  //         toast.success('Verify Successfully!')\n  //         return navigate('/reset')\n  //       }  \n  //     } catch (error) {\n  //       return toast.error('Wront OTP! Check email again!')\n  //     }\n  //   }\n\n  // handler of resend OTP\n  //   function resendOTP(){\n\n  //     let sentPromise = generateOTP(username);\n\n  //     toast.promise(sentPromise ,\n  //       {\n  //         loading: 'Sending...',\n  //         success: <b>OTP has been send to your email!</b>,\n  //         error: <b>Could not Send it!</b>,\n  //       }\n  //     );\n\n  //     sentPromise.then((OTP) => {\n  //       console.log(OTP)\n  //     });\n\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {\n      position: \"top-center\",\n      reverseOrder: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.glass,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-5xl font-bold\",\n            children: \"Recovery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"py-4 text-xl w-2/3 text-center text-gray-500\",\n            children: \"Enter OTP to recover password.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"pt-20\",\n          onSubmit: onSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"textbox flex flex-col items-center gap-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"py-4 text-sm text-left text-gray-500\",\n                children: \"Enter 6 digit OTP sent to your email address.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: styles.textbox,\n                type: \"text\",\n                placeholder: \"OTP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: styles.btn,\n              type: \"submit\",\n              children: \"Recover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-gray-500\",\n            children: [\"Can't get OTP? \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"text-red-500\",\n              children: \"Resend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 60\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_c = Recovery;\nvar _c;\n$RefreshReg$(_c, \"Recovery\");","map":{"version":3,"names":["React","useEffect","useState","toast","Toaster","useAuthStore","styles","generateOTP","verifyOTP","useNavigate","jsxDEV","_jsxDEV","Recovery","className","children","position","reverseOrder","fileName","_jsxFileName","lineNumber","columnNumber","glass","onSubmit","textbox","type","placeholder","btn","_c","$RefreshReg$"],"sources":["C:/Users/nalaw/OneDrive/Desktop/starter/client/src/components/Recovery.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport { useAuthStore } from  '../store/store'\r\nimport styles from '../styles/Username.module.css';\r\nimport { generateOTP, verifyOTP } from '../helper/helper';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nexport default function Recovery() {\r\n\r\n//   const { username } = useAuthStore(state => state.auth);\r\n//   const [OTP, setOTP] = useState();\r\n//   const navigate = useNavigate()\r\n\r\n//   useEffect(() => {\r\n//     generateOTP(username).then((OTP) => {\r\n//       console.log(OTP)\r\n//       if(OTP) return toast.success('OTP has been send to your email!');\r\n//       return toast.error('Problem while generating OTP!')\r\n//     })\r\n//   }, [username]);\r\n\r\n//   async function onSubmit(e){\r\n//     e.preventDefault();\r\n//     try {\r\n//       let { status } = await verifyOTP({ username, code : OTP })\r\n//       if(status === 201){\r\n//         toast.success('Verify Successfully!')\r\n//         return navigate('/reset')\r\n//       }  \r\n//     } catch (error) {\r\n//       return toast.error('Wront OTP! Check email again!')\r\n//     }\r\n//   }\r\n\r\n  // handler of resend OTP\r\n//   function resendOTP(){\r\n\r\n//     let sentPromise = generateOTP(username);\r\n\r\n//     toast.promise(sentPromise ,\r\n//       {\r\n//         loading: 'Sending...',\r\n//         success: <b>OTP has been send to your email!</b>,\r\n//         error: <b>Could not Send it!</b>,\r\n//       }\r\n//     );\r\n\r\n//     sentPromise.then((OTP) => {\r\n//       console.log(OTP)\r\n//     });\r\n    \r\n//   }\r\n\r\n  return (\r\n    <div className=\"container mx-auto\">\r\n\r\n      <Toaster position='top-center' reverseOrder={false}></Toaster>\r\n\r\n      <div className='flex justify-center items-center h-screen'>\r\n        <div className={styles.glass}>\r\n\r\n          <div className=\"title flex flex-col items-center\">\r\n            <h4 className='text-5xl font-bold'>Recovery</h4>\r\n            <span className='py-4 text-xl w-2/3 text-center text-gray-500'>\r\n                Enter OTP to recover password.\r\n            </span>\r\n          </div>\r\n\r\n          <form className='pt-20' onSubmit={onSubmit}>\r\n\r\n              <div className=\"textbox flex flex-col items-center gap-6\">\r\n\r\n                  <div className=\"input text-center\">\r\n                    <span className='py-4 text-sm text-left text-gray-500'>\r\n                      Enter 6 digit OTP sent to your email address.\r\n                    </span>\r\n                    <input  className={styles.textbox} type=\"text\" placeholder='OTP' />\r\n                  </div>\r\n\r\n                  <button className={styles.btn} type='submit'>Recover</button>\r\n              </div>\r\n          </form>\r\n\r\n          <div className=\"text-center py-4\">\r\n            <span className='text-gray-500'>Can't get OTP? <button className='text-red-500'>Resend</button></span>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}